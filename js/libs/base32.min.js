"use strict";const base32=(()=>{const alphabet=(()=>{const RFC_4648_ALPHABET="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";const BASE_32_HEX_ALPHABET="0123456789ABCDEFGHIJKLMNOPQRSTUV";const Z_BASE_32_ALPHABET="ybndrfg8ejkmcpqxot1uwisza345h769";const CROCKFORD_BASE_32_ALPHABET="0123456789ABCDEFGHJKMNPQRSTVWXYZ";return{RFC_4648_ALPHABET:RFC_4648_ALPHABET,BASE_32_HEX_ALPHABET:BASE_32_HEX_ALPHABET,Z_BASE_32_ALPHABET:Z_BASE_32_ALPHABET,CROCKFORD_BASE_32_ALPHABET:CROCKFORD_BASE_32_ALPHABET}})();const encoding=(()=>{const to_byte=data=>{const type=Object.prototype.toString.call(data);switch(type){case"[object Array]":return data.slice();case"[object String]":return[].slice.call(new TextEncoder().encode(data));case"[object Uint8Array]":return[].slice.call(data);case"[object ArrayBuffer]":return[].slice.call(new Uint8Array(data));default:throw new Error(`Invalid data type "${type}" provided.`);}};const slice_to_quintet=bytes=>{const length=bytes.length;for(let i=length;i<5;i++){bytes[i]=0;}let retval=[];if(length>0){retval[retval.length]=(bytes[0]>>>3)&0x1f;retval[retval.length]=((bytes[0]<<2)|(bytes[1]>>>6))&0x1f;}if(length>1){retval[retval.length]=(bytes[1]>>>1)&0x1f;retval[retval.length]=((bytes[1]<<4)|(bytes[2]>>>4))&0x1f;}if(length>2){retval[retval.length]=((bytes[2]<<1)|(bytes[3]>>>7))&0x1f;}if(length>3){retval[retval.length]=(bytes[3]>>>2)&0x1f;retval[retval.length]=((bytes[3]<<3)|(bytes[4]>>>5))&0x1f;}if(length>4){retval[retval.length]=bytes[4]&0x1f;}return retval;};const bytes_to_quintet=bytes=>{let all=[];for(let i=0;i<bytes.length;i+=5){const quintet=slice_to_quintet(bytes.slice(i,i+5));for(let j=0;j<quintet.length;j++){all[all.length]=quintet[j];}}return all;};const quintet_to_alphabet=(quintet,alphabet)=>{let retval="";for(let i=0;i<quintet.length;i++){retval+=alphabet[quintet[i]];}return retval;};const pad=(encoded,padding)=>{if(encoded.length===0)return"";if(padding&&encoded.length%8!==0){for(let i=encoded.length%8;i<8;i++){encoded+="=";}}return encoded;};const to_lower_case=(encoded,lowercase)=>{if(lowercase)return encoded.toLowerCase();return encoded;};return{process(data,alphabet,padding,lowercase){return to_lower_case(pad(quintet_to_alphabet(bytes_to_quintet(to_byte(data)),alphabet),padding),lowercase);}}})();const decoding=(()=>{const alphabet_to_quintet=(encoded,alphabet)=>{encoded=encoded.replaceAll("=","");let retval=[];for(let i=0;i<encoded.length;i++){retval[i]=alphabet.indexOf(encoded[i]);}return retval;};const slice_to_bytes=quintet=>{const length=quintet.length;for(let i=length;i<8;i++){quintet[i]=0;}let retval=[];retval[retval.length]=((quintet[0]<<3)|(quintet[1]>>2))&0xff;if(length>2)retval[retval.length]=((quintet[1]<<6)|(quintet[2]<<1)|(quintet[3]>>>4))&0xff;if(length>4)retval[retval.length]=((quintet[3]<<4)|(quintet[4]>>1))&0xff;if(length>5)retval[retval.length]=((quintet[4]<<7)|(quintet[5]<<2)|(quintet[6]>>>3))&0xff;if(length>7)retval[retval.length]=((quintet[6]<<5)|(quintet[7]))&0xff;return retval;};const quintet_to_bytes=quintet=>{let all=[];for(let i=0;i<quintet.length;i+=8){const bytes=slice_to_bytes(quintet.slice(i,i+8));for(let j=0;j<bytes.length;j++){all[all.length]=bytes[j];}}return all;};return{to_array(data,alphabet){return quintet_to_bytes(alphabet_to_quintet(data.toLowerCase(),alphabet.toLowerCase()));},to_hex(data,alphabet){return this.to_array(data,alphabet).map(x=>x.toString(16).padStart(2,'0')).join('');},to_base64(data,alphabet){return btoa(this.to_array(data,alphabet).map(x=>String.fromCharCode(x)).join(''));},to_utf8(data,alphabet){return new TextDecoder().decode(new Uint8Array(this.to_array(data,alphabet)).buffer);}}})();const RFC_4648=(()=>{const decode=(()=>{return{to_array(data){return decoding.to_array(data,alphabet.RFC_4648_ALPHABET);},to_hex(data){return decoding.to_hex(data,alphabet.RFC_4648_ALPHABET);},to_base64(data){return decoding.to_base64(data,alphabet.RFC_4648_ALPHABET);},to_utf8(data){return decoding.to_utf8(data,alphabet.RFC_4648_ALPHABET);}}})();return{encode(data,padding=true,lowercase=false){return encoding.process(data,alphabet.RFC_4648_ALPHABET,padding,lowercase);},decode:decode}})();const BASE_32_HEX=(()=>{const decode=(()=>{return{to_array(data){return decoding.to_array(data,alphabet.BASE_32_HEX_ALPHABET);},to_hex(data){return decoding.to_hex(data,alphabet.BASE_32_HEX_ALPHABET);},to_base64(data){return decoding.to_base64(data,alphabet.BASE_32_HEX_ALPHABET);},to_utf8(data){return decoding.to_utf8(data,alphabet.BASE_32_HEX_ALPHABET);}}})();return{encode(data,padding=true,lowercase=false){return encoding.process(data,alphabet.BASE_32_HEX_ALPHABET,padding,lowercase);},decode:decode}})();const Z_BASE_32=(()=>{const decode=(()=>{return{to_array(data){return decoding.to_array(data,alphabet.Z_BASE_32_ALPHABET);},to_hex(data){return decoding.to_hex(data,alphabet.Z_BASE_32_ALPHABET);},to_base64(data){return decoding.to_base64(data,alphabet.Z_BASE_32_ALPHABET);},to_utf8(data){return decoding.to_utf8(data,alphabet.Z_BASE_32_ALPHABET);}}})();return{encode(data){return encoding.process(data,alphabet.Z_BASE_32_ALPHABET,false,true);},decode:decode}})();const CROCKFORD_BASE_32=(()=>{const formatData=encoded=>{encoded=encoded.toLowerCase();encoded=encoded.replaceAll("o","0");encoded=encoded.replaceAll("i","1");encoded=encoded.replaceAll("l","1");return encoded;};const decode=(()=>{return{to_array(data){return decoding.to_array(formatData(data),alphabet.CROCKFORD_BASE_32_ALPHABET);},to_hex(data){return decoding.to_hex(formatData(data),alphabet.CROCKFORD_BASE_32_ALPHABET);},to_base64(data){return decoding.to_base64(formatData(data),alphabet.CROCKFORD_BASE_32_ALPHABET);},to_utf8(data){return decoding.to_utf8(formatData(data),alphabet.CROCKFORD_BASE_32_ALPHABET);}}})();return{encode(data,lowercase=false){return encoding.process(data,alphabet.CROCKFORD_BASE_32_ALPHABET,false,lowercase);},decode:decode}})();return{alphabet:alphabet,RFC_4648:RFC_4648,BASE_32_HEX:BASE_32_HEX,Z_BASE_32:Z_BASE_32,CROCKFORD_BASE_32:CROCKFORD_BASE_32}})();